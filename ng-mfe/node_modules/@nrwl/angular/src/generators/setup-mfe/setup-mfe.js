"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupMfe = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const lib_1 = require("./lib");
const versions_1 = require("../../utils/versions");
function setupMfe(host, options) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        const projectConfig = (0, devkit_1.readProjectConfiguration)(host, options.appName);
        const remotesWithPorts = (0, lib_1.getRemotesWithPorts)(host, options);
        (0, lib_1.addRemoteToHost)(host, options);
        (0, lib_1.generateWebpackConfig)(host, options, projectConfig.root, remotesWithPorts);
        (0, lib_1.addEntryModule)(host, options, projectConfig.root);
        (0, lib_1.addImplicitDeps)(host, options);
        (0, lib_1.changeBuildTarget)(host, options);
        (0, lib_1.updateTsConfigTarget)(host, options);
        (0, lib_1.setupServeTarget)(host, options);
        (0, lib_1.fixBootstrap)(host, projectConfig.root);
        (0, lib_1.addCypressOnErrorWorkaround)(host, options);
        let installPackages = () => { };
        if (!options.skipPackageJson) {
            // add package to install
            installPackages = (0, devkit_1.addDependenciesToPackageJson)(host, {
                '@angular-architects/module-federation': versions_1.angularArchitectsModuleFederationPluginVersion,
            }, {});
        }
        // format files
        if (!options.skipFormat) {
            yield (0, devkit_1.formatFiles)(host);
        }
        return installPackages;
    });
}
exports.setupMfe = setupMfe;
exports.default = setupMfe;
//# sourceMappingURL=setup-mfe.js.map